name: Test
on: [push, pull_request]

jobs:
  test:
    name: Test Docker Setup
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy environment file
        run: cp .env.example .env

      - name: Start containers
        run: docker compose up -d

      - name: Check running containers
        run: docker compose ps

      - name: Wait for WordPress
        run: |
          echo "Waiting for WordPress to be ready..."
          timeout 120s bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080)" != "200" && "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080)" != "302" ]]; do 
            echo "Waiting... Current status: $(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080)"
            docker compose ps
            docker compose logs wp --tail 20
            sleep 10
          done' || false

      - name: Check WordPress response
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' localhost:8080)
          echo "WordPress status code: $STATUS"
          if [[ "$STATUS" != "200" && "$STATUS" != "302" ]]; then
            echo "Unexpected status code"
            exit 1
          fi

      - name: Check MariaDB connection
        run: |
          echo "Checking database connection..."
          docker compose exec -T db mysqladmin -u root -p${DB_ROOT_PASSWORD} ping
          echo "Database connection successful"

      - name: Check Mailpit
        run: |
          echo "Checking Mailpit..."
          curl -I http://localhost:8025
          echo "Mailpit check completed"

      - name: Show logs on failure
        if: failure()
        run: |
          echo "Docker compose status:"
          docker compose ps
          echo "WordPress logs:"
          docker compose logs wp
          echo "Database logs:"
          docker compose logs db
          echo "Mailpit logs:"
          docker compose logs mailpit

      - name: Stop containers
        if: always()
        run: docker compose down -v 
